
"""转义字符"""

"""
一、使用转义字符表示无法直接表示的特殊字符
    当字符串中包含换行、回车、水平制表符或退格等无法直接表示的特殊字符时，该如何表示呢？
        换行：newline，光标移动到下一行的开头
        回车：return，光标移动到本行的开头
        水平制表符：键盘上的tab键，光标移动到下一组4个空格的开始处      《图解Python》
        退格：键盘上的backspace键，回退一个字符

    可以使用如下转义字符：
        换行：\n
        回车：\r
        水平制表符：\t
        退格：\b
"""
print('abc\ndef')
"""
abc
def
"""
print('abc\rdef')   # def
print('123456\t123\t45')  # 123456	123	45
print('abc\bdef')   # abdef

"""
二、使用转义字符表示在字符串中有特殊用途的字符
    某些字符在字符串中有特殊用途，比如：反斜杠用于转义，单引号和双引号用于字符串的边界。因此，
不能在字符串中直接包含这些有特殊用途的字符。
"""
# 本来想要打印字符串abc\rdef，结果斜杠用于转义了
print('abc\rdef')   # def
# 本来想要打印字符串abc'def'，结果前两个单引号进行了匹配
# print('abc'def'')
# 本来想要打印字符串abc"def"，结果前两个双引号进行了匹配
# print("abc"def"")
"""
    当字符串包含反斜杠、单引号和双引号等有特殊用途的字符时，必须使用反斜杠对这些字符进行转义：
        反斜线：\\
        单引号：\'
        双引号：\"  
"""
print('abc\\rdef')   # abc\rdef
print('abc\'def\'')  # abc'def'
print("abc\"def\"")  # abc"def"

"""
    《图解Python》
"""
