
"""水仙花数"""

"""
【问题描述】
    如果一个d位自然数（d ≥ 3）n等于它的每个位上的数字的d次幂之和，那么该d位自然数n被称为水仙花数。
    例如：371 = 3 ^ 3 + 7 ^ 3 + 1 ^ 3
	求所有的三位水仙花数。
	
【设计思路】
    设计思路一：基于“分解”的程序设计
	    通过一重循环穷举所有三位自然数n。
	    在穷举的过程中，将n“分解”为百位、十位和个位对应的三个数字a、b和c，
	    然后判断n是否等于a、b和c的立方和。
"""
def eval_shuixian1():
    """求所有的三位水仙花数（思路一：基于“分解”的程序设计）"""
    # 通过一重循环穷举所有三位自然数n
    for n in range(100, 1000):
        # 在穷举的过程中，将n“分解”为百位、十位和个位对应的三个数字a、b和c
        a = n // 100        # 分解出百位
        b = (n // 10) % 10  # 分解出十位
        c = n % 10          # 分解出个位

        # 判断n是否等于a、b和c的立方和
        if n == a ** 3 + b ** 3 + c ** 3:
            print(n)

print('所有的三位水仙花数：')
eval_shuixian1()

"""
    设计思路二：基于“组合”的程序设计
	    设置三位自然数n的百位、十位和个位分别对应a、b和c，通过三重循环穷举百位、十位和个位的三个数字，
	    其中，a的取值范围是：[1, 9]，b的取值范围是：[0, 9]，c的取值范围是：[0, 9]。
	    在穷举的过程中，将a、b和c“组合”为三位自然数n，然后判断n是否等于a、b和c的立方和。
"""
def eval_shuixian2():
    """求所有的三位水仙花数（思路二：基于“组合”的程序设计）"""
    # 设置三位自然数n的百位、十位和个位分别对应a、b和c
    # 通过三重循环穷举百位、十位和个位的三个数字
    for a in range(1, 10):
        for b in range(0, 10):
            for c in range(0, 10):
                # 在穷举的过程中，将a、b和c“组合”为三位自然数n
                n = a * 100 + b * 10 + c

                # 判断n是否等于a、b和c的立方和
                if n == a ** 3 + b ** 3 + c ** 3:
                    print(n)

print('所有的三位水仙花数：')
eval_shuixian2()

"""
	设计思路三：基于“分解”的程序设计（改进，更具通用性）
	    定义一个函数，对于任意一个d位自然数（d ≥ 3）n，判断其是否是水仙花数
	    "分解"出任意一个d位自然数的每个位上的数字，存储在列表中
	    列表的长度即是d位自然数的位数d
	    判断n是否等于每个位上的数字的d次幂之和
	    
	    通过一重循环穷举所有三位自然数，
	    在穷举的过程中，调用定义的函数，判断当前的三位自然数是否是水仙花数
"""
def isshuixian(n):
    """对于任意一个d位自然数（d ≥ 3）n，判断其是否是水仙花数"""
    # 初始化一个空列表
    t = []
    # 变量nc也引用要判断的任意一个d位自然数
    nc = n

    # "分解"出任意一个d位自然数的每个位上的数字，存储在列表中
    while nc > 0:
        t.append(nc % 10)
        nc //= 10

    # 列表的长度即是d位自然数的位数d
    d = len(t)

    # 判断n是否等于每个位上的数字的n次幂之和
    return n == sum([i ** d for i in t])

print('所有的三位水仙花数：')
# 通过一重循环穷举所有三位自然数
for n in range(100, 1000):
    # 在穷举的过程中，调用定义的函数，判断当前的三位自然数是否是水仙花数
    if isshuixian(n):
        print(n)
