
"""自守数"""

"""
【问题描述】
	如果某个自然数是其平方的尾部，那么该自然数被称为自守数。
	例如：
	25 x 25 = 625，25是625的尾部，所以25是自守数。
    76 x 76 = 5776，76是5776的尾部，所以76是自守数。
	求1000以内的所有自守数。
	
【设计思路】
    定义一个函数，对于任意一个自然数n，判断其是否是自守数
    先求出自然数n的位数d，然后求出自然数n的平方的后d位t
    最后判断n是否等于t

    通过一重循环穷举1000以内的所有自然数，
    在穷举的过程中，调用定义的函数，判断当前自然数是否是自守数
"""
def iszishou(n):
    """对于任意一个自然数n，判断其是否是自守数"""
    # 自然数n的位数d
    d = len(str(n))
    # 自然数n的平方的后d位t
    t = n * n % (10 ** d)
    return n == t

print('1000以内的所有自守数：')
# 通过一重循环穷举1000以内的所有自然数
for n in range(1, 1000):
    # 在穷举的过程中，调用定义的函数，判断当前自然数是否是自守数
    if iszishou(n):
        print(n)


print('1000以内的所有自守数：')
# 使用列表生成式，一行语句就可以搞定
print([n for n in range(1, 1000) if n == n * n % (10 ** len(str(n)))])
