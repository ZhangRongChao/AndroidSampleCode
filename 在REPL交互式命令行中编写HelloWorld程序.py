
"""在REPL交互式命令行中编写HelloWorld程序"""

"""
一、什么是HelloWorld程序
    HelloWorld程序是指在计算机屏幕上输出“hello, world”这行字符串的计算机程序。
    HelloWorld程序泛指在学习一门技术时，编写的第一个最最简单的程序。

二、什么是REPL
    R：Read      读取输入内容
    E：Evaluate  计算或执行输入内容
    P：Print     打印计算或执行的结果
    L：Loop      不断重复此过程
    
三、如何进入和退出REPL交互式命令行
    在Windows操作系统中，进入REPL交互式命令行有如下几种方式：
    1. 在命令提示符窗口中输入python3
    2. 开始菜单 --> 所有程序 --> Python 3.x文件夹 --> Python 3.x（64-bit）
    3. 开始菜单 --> 所有程序 --> Python 3.x文件夹 --> IDLE（Python 3.x 64-bit）
    
    在MacOS操作系统中，进入REPL交互式命令行有如下几种方式：
    1. 在终端窗口中输入python3
    2. 打开：/Applications/Python 3.x/IDLE.app
    
    在Ubuntu操作系统中，进入REPL交互式命令行的方式：在终端窗口中输入python3
    
    进入REPL交互式命令行后，会看到其提示符>>>。
    
    输入exit()或quit()，可退出REPL交互式命令行。
    在Windows操作系统中，按Ctrl+Z也可退出REPL交互式命令行。
    在MacOS或Ubuntu操作系统中，按Ctrl+D也可退出REPL交互式命令行。
    
四、在REPL交互式命令行中编写HelloWorld程序
    
    简要介绍函数简要介绍函数简要介绍函数简要介绍函数简要介绍函数

    在REPL交互式命令行中编写如下HelloWorld程序，并按回车键：
    >>> print('hello, world') # 打印字符串'hello, world'
    hello, world
    解释器会读取并执行输入的代码，打印出字符串'hello, world'，
    然后再次显示提示符>>>以等待用户的输入，
    因此，整个过程是REPL交互式的。
    
    以上程序只有一行语句以及该语句的一条注释。
    1. Python中的语句无须使用任何符号作为结束符。
        当然，也可以使用分号；作为语句的结束符。
        当把两条或两条以上的语句写在同一行时，
        必须使用分号；作为语句的结束符以便在语句之间进行分隔，例如：
        print('hello, world'); print("I am learning Python!"); print("So Great!")
    2. 内置函数print()用于打印指定的字符串并换行。
        如果不需要换行，可以在函数print()中添加一个参数end，并指定该参数的值为''，
        例如：print('hello, world', end = '')
    3. 注释用于说明程序中某段代码的作用，是对程序的解释和补充说明。
        注释是程序的重要组成部分。
        注释可以增加程序的可读性和可维护性，
        尤其是在一个开发团队内部由多个团队成员共同开发软件项目时，
        一个团队成员编写的程序可能需要被其他团队成员阅读和维护。
        软件开发人员应该养成编写注释的好习惯。
        解释器在读取程序时，会忽略所有的注释。
        Python中的注释包括两种：
        （1）单行注释。用#开头。
        （2）多行注释。将多行代码包含在三个引号中。

五、REPL交互式命令行的使用场景
    1. REPL交互式命令行通常用于快速验证小的Python代码片段，
    当代码的行数较多时，在REPL交互式命令行中编写代码就显得不方便了，
    最好使用文本编辑器或集成开发环境IDE。
    2. 当退出REPL交互式命令行之后，编写的所有代码会全部丢失，
    因此，如果想要保存编写的代码，就只能使用文本编辑器或集成开发环境IDE了。
"""


