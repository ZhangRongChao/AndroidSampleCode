
"""函数的概述"""

"""
一、什么是函数
    简单地说，函数就是个黑匣子，它接收输入（参数），然后执行特定任务以完成特定功能，
最后生成输出（返回值）。其中，输入（参数）和输出（返回值）都是可选的，也就是说，可以有也可以没有。

    《图解Python》

    函数就是执行特定任务以完成特定功能的一段代码。可以在程序中将某段代码定义成函数，
并指定一个函数名以及接收的输入（参数），这样，就可以在程序的其它地方通过函数名多次调用并执行
该段代码了，每次调用并执行后，都会根据接收的输入（参数）执行特定任务以完成特定功能从而生成
相应的输出（返回值）。

    《图解Python》

    Python语言已经定义了很多内置函数。我们可以在程序中通过函数名直接调用这些内置函数。
例如：当我们调用内置函数id()时，输入（参数）是任意的对象，完成的特定功能是获取输入（参数）的
唯一标识，输出（返回值）是输入（参数）的唯一标识。

第1次调用内置函数id()，输入参数是一个整数类型的对象：
"""
print(id(18))           # 4305324960
"""
第2次调用内置函数id()，输入参数是一个字符串类型的对象：
"""
print(id('Hello'))      # 4327180472
"""
第3次调用内置函数id()，输入参数是一个列表类型的对象：
"""
print(id([1, 2, 3]))    # 4367616712

"""
二、为什么需要函数

    《图解Python》
    
1.复用代码
    如果在程序中需要多次完成某个特定的功能，我们无需把这个特定功能的相关代码在多个地方编写多次，
完全可以把这个特定功能的相关代码定义成函数，然后在多个地方调用该函数，
每次调用都会把函数对应的相关代码执行一遍。

2.隐藏实现细节　　
    函数就是个黑匣子，将实现细节隐藏起来了。很多时候我们无需关注函数的实现细节，
只需关注其接收的输入（参数）及生成的输出（返回值）就可以了。

3.提高可维护性
    把完成某段特定功能的代码定义为函数后，如果需要对这段代码进行修改，只需要在一个地方进行修改，
提高了程序的可维护性。否则，你需要找到这段代码的多个不同地方，每个地方都要进行同样的修改，
费时费力还容易出错。

4.提高可读性、便于调试
    每个函数都对应一段完成特定功能的代码，提高了程序的可读性，也便于程序调试。
"""
