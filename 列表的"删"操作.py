
"""列表的"删"操作"""

"""
    如果想要删除列表中的元素，有五种常见的方式：
一、调用方法remove（一次只删除一个指定的元素）
    《图解Python》
"""
L = [3, 4, 5, 6, 5, 7]

L.remove(4)
print(L)    # [3, 5, 6, 5, 7]

"""
    如果列表中存在多个指定元素，只删除第1个指定元素。
"""
L.remove(5)
print(L)    # [3, 6, 5, 7]

"""
    如果要删除的指定元素在列表中不存在，抛出ValueError。
"""
# .remove(8) # ValueError: list.remove(x): x not in list

"""
二、调用方法pop（一次只删除一个指定索引的元素）
    该方法返回被删除的元素。
"""
L = [3, 4, 5, 6, 7]

print(L.pop(2)) # 5
print(L)        # [3, 4, 6, 7]

"""
    如果指定的索引不存在，抛出IndexError。
"""
# .pop(8)    # IndexError: pop index out of range

"""
    如果没有指定索引，默认删除列表中的最后一个元素。
"""
print(L.pop())  # 7
print(L)        # [3, 4, 6]

"""
三、使用del语句（一次至少删除一个元素）
"""
L = [3, 4, 5, 6, 7, 8, 9]

del L[2]
print(L)    # [3, 4, 6, 7, 8, 9]

del L[1:4]
print(L)    # [3, 8, 9]

"""
四、给指定的切片赋值一个空列表（一次至少删除一个元素）
"""
L = [3, 4, 5, 6, 7, 8, 9]

L[2:3] = []
print(L)    # [3, 4, 6, 7, 8, 9]

L[1:4] = []
print(L)    # [3, 8, 9]

# 清空列表
L[:] = []
print(L)    # []

"""
五、调用方法clear清空列表
"""
L = [3, 4, 5, 6, 7]

L.clear()
print(L)    # []
