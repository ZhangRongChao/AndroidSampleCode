
"""不重复的三位数"""

"""
【问题描述】
    统计0~9这10个数字可以组成多少个不重复的三位数。
    
【设计思路】
	根据排列组合的数学知识可知：0~9这10个数字可以组成不重复三位数的个数为：9 * 9 * 8 = 648。
	设三位数的百位、十位和个位分别为a、b和c，其取值范围分别为[1, 9]、[0, 9]和[0, 9]。
	通过三重循环穷举a、b和c的值，在穷举的过程中，只要三者两两不相等，就找到了一个符合条件的解。
"""
counter = 0

# 设三位数的百位、十位和个位分别为a、b和c，其取值范围分别为[1, 9]、[0, 9]和[0, 9]
# 通过三重循环穷举a、b和c的值
for a in range(1, 10):
    for b in range(10):
        for c in range(10):
            # 在穷举的过程中，只要三者两两不相等，就找到了一个符合条件的解
            if a != b and b != c and c != a:
                counter += 1

"""
for a in range(1, 10):
    for b in range(10):
        if a == b:
            continue
        for c in range(10):
            if b != c and c != a:
                counter += 1
"""

print(counter)
